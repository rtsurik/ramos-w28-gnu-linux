aconline_or_not=if ac_online; then; else poweroff; fi
batfull_threshold=100
batlow_or_not=if ac_online; then; else get_batcap; if itest ${battery_cap} < ${batlow_threshold}; then run prepare; run batlow_warning; poweroff; fi; fi
batlow_threshold=10
batlow_warning=bmp display ${batterylow_offset}; msleep 500; bmp display ${batterylow_offset}; msleep 500; bmp display ${batterylow_offset}; msleep 500; bmp display ${batterylow_offset}; msleep 500; bmp display ${batterylow_offset}; msleep 1000
baudrate=115200
bootargs=init=/init console=ttyS0,115200n8 hlt no_console_suspend vmalloc=256m mem=1024m logo=osd1,loaded,panel,debug hdmitx=vdacoff,powermode1,unplug_powerdown
bootcmd=bmp display ${bootup_offset}; nand read boot ${loadaddr} 0 600000; setenv bootargs ${bootargs} a9_clk_max=1512000000; bootm
bootdelay=1
bootfile=uImage
charging=video clear; run display_loop
charging_or_not=if ac_online; then run prepare; run charging; else if getkey; then run prepare; bmp display ${poweron_offset}; run bootcmd; else poweroff; fi; fi
chipname=8726m
console=ttyS2,115200n8
custom_delay=setenv msleep_count 0; while itest ${msleep_count} < 800; do run aconline_or_not; run updatekey_or_not; run usb_burning_or_not; run powerkey_or_not; msleep 1; calc ${msleep_count} + 1 msleep_count; done; run sleep_or_not
display_bpp=16
display_color_bg=0
display_color_fg=0xffff
display_color_format_index=16
display_height=1280
display_layer=osd2
display_loop=while itest 1 == 1; do get_batcap; if itest ${battery_cap} >= ${batfull_threshold}; then bmp display ${batteryfull_offset}; run custom_delay; else bmp display ${battery0_offset}; run custom_delay; bmp display ${battery1_offset}; run custom_delay; bmp display ${battery2_offset}; run custom_delay; bmp display ${battery3_offset}; run custom_delay; fi; done
display_width=800
fb_addr=0x85100000
into_sleep=suspend; while itest ${sleep_enable} == 1; do run sleep_get_key; done; video dev enable; video dev bl_on
loadaddr=0x82000000
loadaddr_misc=0x83000000
machid=4e21
mmcargs=setenv bootargs console=${console} boardname=m6_g04
powerkey_or_not=if getkey; then msleep 500; if getkey; then run bootcmd; fi; fi
preboot=if itest ${upgrade_step} == 1; then defenv; setenv upgrade_step 2; save; fi;nand read logo ${loadaddr_misc} 0 40000; unpackimg ${loadaddr_misc};usbbc; chk_all_regulators; get_rebootmode; clear_rebootmode; echo reboot_mode=${reboot_mode}; if test ${reboot_mode} = usb_burning; then run usb_burning; fi; run upgrade_check; run batlow_or_not; setenv sleep_count 0; saradc open 4; run updatekey_or_not; run usb_burning_or_not; run switch_bootmode
prepare=nand read logo ${loadaddr_misc} 0 40000; unpackimg ${loadaddr_misc}; video open; video clear; video dev bl_on
recovery=run prepare; bmp display ${bootup_offset}; if nand read recovery ${loadaddr} 0 600000; then setenv bootargs ${bootargs} a9_clk_max=800000000; bootm; else echo no uImage_recovery in NAND; fi
sleep_get_key=run aconline_or_not;if getkey; then msleep 100; if getkey; then setenv sleep_enable 0; fi; fi; if saradc get_in_range 0x0 0x380; then msleep 100; if saradc get_in_range 0x0 0x380; then setenv sleep_enable 0; fi; fi
sleep_or_not=if itest ${sleep_count} > ${sleep_threshold}; then run into_sleep; setenv sleep_count 0; else calc ${sleep_count} + 1 sleep_count; fi
sleep_threshold=20
switch_bootmode=if test ${reboot_mode} = normal; then run prepare; bmp display ${poweron_offset}; else if test ${reboot_mode} = factory_reset; then run recovery; else if test ${reboot_mode} = update; then run update; else run charging_or_not; fi; fi; fi
testaddr=0x82400000
update=run prepare; bmp display ${bootup_offset}; if mmcinfo; then if fatload mmc 0 ${loadaddr} aml_autoscript; then autoscr ${loadaddr}; fi; if fatload mmc 0 ${loadaddr} uImage_recovery; then setenv bootargs ${bootargs} a9_clk_max=800000000; bootm; fi; if fatload mmc 0 ${loadaddr} recovery.img; then setenv bootargs ${bootargs} a9_clk_max=800000000; bootm; fi; fi; nand read recovery ${loadaddr} 0 600000; setenv bootargs ${bootargs} a9_clk_max=800000000; bootm
updatekey_or_not=if saradc get_in_range 0x50 0xf0; then msleep 500; if getkey; then if saradc get_in_range 0x50 0xf0; then run update; fi; fi; fi
upgrade_check=if itest ${upgrade_step} == 0; then defenv; save; run update; fi
upgrade_step=2
usb_burning=tiny_usbtool 20000
usb_burning_or_not=if saradc get_in_range 0x100 0x150; then msleep 500; if getkey; then if saradc get_in_range 0x100 0x150; then run usb_burning; fi; fi; fi
usbtty=cdc_acm
video_dev=panel
